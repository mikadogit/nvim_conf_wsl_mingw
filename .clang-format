# ------------------------------
# üìå Configuration principale
# ------------------------------
Language: Cpp              # Langage cible : C++
BasedOnStyle: LLVM         # Style de base utilis√© : LLVM (modifiable)

# ------------------------------
# üìå Mise en page g√©n√©rale
# ------------------------------
ColumnLimit: 0                # Largeur max d'une ligne avant retour √† la ligne automatique
InsertNewlineAtEOF: true        # Ajoute une ligne vide √† la fin du fichier (bonne pratique)
SortIncludes: Never             # Emp√™che la r√©organisation automatique des includes

# ------------------------------
# üìå Alignement du code
# ------------------------------
AlignConsecutiveAssignments: # Alignement des affectations successives
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true
  AlignCompound: true
  PadOperators: true

AlignConsecutiveDeclarations: # Alignement des d√©clarations successives
  Enabled: true
  AlignFunctionPointers: true
  PadOperators: true

AlignConsecutiveBitFields: # Alignement des champs de bits
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true

AlignConsecutiveShortCaseStatements: # Alignement des `case` courts dans les `switch`
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true
  AlignCaseColons: true
  AlignCaseArrows: true

AlignConsecutiveMacros: AcrossEmptyLinesAndComments # Alignement des macros successifs

AlignTrailingComments: # Alignement des commentaires en fin de ligne
  Kind: Always
  OverEmptyLines: 1

AlignOperands: AlignAfterOperator # Alignement des op√©randes dans les expressions longues

# ------------------------------
# üìå Gestion des blocs courts
# ------------------------------
AllowShortBlocksOnASingleLine: Always       # Autorise les blocs courts sur une ligne
AllowShortCaseLabelsOnASingleLine: true     # Autorise `case` courts sur une seule ligne
AllowShortEnumsOnASingleLine: true          # Autorise les `enum` courts sur une ligne
AllowShortFunctionsOnASingleLine: All       # Autorise les fonctions courtes sur une ligne
AllowShortIfStatementsOnASingleLine: Always # Autorise `if (...) instruction;` sans accolades
AllowShortLambdasOnASingleLine: All         # Autorise les lambdas courtes sur une ligne
AllowShortLoopsOnASingleLine: true          # Autorise `for` et `while` courts sur une seule ligne

# ------------------------------
# üìå Position des accolades `{ }`
# ------------------------------
BraceWrapping:

  AfterCaseLabel: true       # `{` apr√®s `case`
  AfterClass: true           # `{` apr√®s `class`
  AfterControlStatement: true # `{` apr√®s `if`, `for`, `while`, etc.
  AfterEnum: true           # `{` apr√®s `enum`
  AfterFunction: true        # `{` apr√®s une d√©claration de fonction
  AfterNamespace: true       # `{` apr√®s `namespace`
  AfterStruct: true          # `{` apr√®s `struct`
  AfterUnion: true           # `{` apr√®s `union`
  AfterExternBlock: true     # `{` apr√®s `extern "C" {}`

  BeforeCatch: true          # `{` avant `catch`
  BeforeElse: true           # `{` avant `else`
  BeforeLambdaBody: true     # `{` avant le corps d'une lambda
  BeforeWhile: true          # `{` avant `while` dans un `do-while`

  SplitEmptyFunction: false  # Garde `void func() {}` sur une seule ligne
  SplitEmptyRecord: false    # Garde `struct S {};` sur une seule ligne
  SplitEmptyNamespace: false # Garde `namespace X {};` sur une seule ligne

  IndentBraces: false         # Indente les accolades `{}`

BreakBeforeBraces: Custom    # Utilisation des r√®gles personnalis√©es pour `{}`

# ------------------------------
# üìå Espaces et indentation
# ------------------------------
MaxEmptyLinesToKeep: 1                    # Nombre max de lignes vides cons√©cutives
IndentWidth: 4                          # Indentation standard (4 espaces)
TabWidth: 4                                # Largeur des tabulations (4 espaces)
UseTab: Never                              # Utilise des espaces plut√¥t que des tabulations
NamespaceIndentation: All                  # Indente tout le contenu des `namespace`
IndentCaseLabels: true                     # Indente les `case` dans un `switch`
IndentAccessModifiers: true                # Indente les modificateurs d'acc√®s (`public`, `private`...)

AlignAfterOpenBracket: Align              # Alignement apr√®s parenth√®ses et crochets
BracedInitializerIndentWidth: 4            # Indentation des initialisations en `{}`
ConstructorInitializerIndentWidth: 4       # Indentation des initialisateurs de constructeur

IndentCaseBlocks: false
ContinuationIndentWidth: 4



# ------------------------------
# üìå Alignement des pointeurs, r√©f√©rences et Arrays
# ------------------------------
PointerAlignment: Left    # `int *ptr;` au lieu de `int* ptr;`
ReferenceAlignment: Left # `int &ref;` au lieu de `int& ref;`
AlignArrayOfStructures: Right

# ------------------------------
# üìå Gestion des retours √† la ligne
# ------------------------------
AllowAllArgumentsOnNextLine: false  # Arguments d√©plac√©s sur une ligne suivante si trop longs
BinPackParameters: BinPack          # Un param√®tre par ligne si n√©cessaire

BinPackArguments: true            # Pas de regroupement forc√© des arguments

BreakBeforeBinaryOperators: All    # Op√©rateurs binaires (`+`, `-`, `*`, `/`) √† la ligne
BreakBinaryOperations: OnePerLine  # Un op√©rateur par ligne si n√©cessaire

BreakBeforeTernaryOperators: true  # Op√©rateurs ternaires (`?:`) √† la ligne

BreakConstructorInitializers: BeforeComma # Retour √† la ligne avant `,` dans les constructeurs
BreakInheritanceList: BeforeComma  # Retour √† la ligne avant `,` dans les listes d'h√©ritage

BreakStringLiterals: true          # Retour √† la ligne dans les cha√Ænes trop longues

EmptyLineBeforeAccessModifier: Always # Ajout d'une ligne vide avant `public`, `private`, etc.

# ------------------------------
# üìå S√©parateurs de nombres
# ------------------------------
IntegerLiteralSeparator:
  Binary: 4
  BinaryMinDigits: 5
  Decimal: 3
  DecimalMinDigits: 4
  Hex: 2
  HexMinDigits: 4

# ------------------------------
# üìå Autres options
# ------------------------------
KeepEmptyLines:
  AtEndOfFile: true
  AtStartOfBlock: false
  AtStartOfFile: false

ReflowComments: false # D√©sactive la mise en forme automatique des commentaires
